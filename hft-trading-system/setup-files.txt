# pyproject.toml
[tool.poetry]
name = "hft-trading"
version = "0.1.0"
description = "High-Frequency Trading System with AI/ML Integration"
authors = ["Your Name <your.email@example.com>"]

[tool.poetry.dependencies]
python = "^3.9"
numpy = "^1.23.0"
pandas = "^1.5.0"
torch = "^2.0.0"
fastapi = "^0.100.0"
redis = "^4.5.0"
sqlalchemy = "^2.0.0"
psycopg2-binary = "^2.9.0"
websockets = "^11.0.0"
pydantic = "^2.0.0"
prometheus-client = "^0.17.0"

[tool.poetry.dev-dependencies]
pytest = "^7.0.0"
black = "^23.0.0"
mypy = "^1.0.0"
pylint = "^2.17.0"

# .env.example
DATABASE_URL=postgresql://user:password@localhost:5432/hft_db
REDIS_URL=redis://localhost:6379
LOG_LEVEL=INFO
ENVIRONMENT=development

# docker-compose.yml
version: '3.8'
services:
  app:
    build: .
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://user:password@db:5432/hft_db
      - REDIS_URL=redis://redis:6379
    depends_on:
      - db
      - redis

  db:
    image: postgres:15
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=hft_db
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7
    ports:
      - "6379:6379"

volumes:
  postgres_data:

# Dockerfile
FROM python:3.9-slim

WORKDIR /app
COPY pyproject.toml poetry.lock ./

RUN pip install poetry && \
    poetry config virtualenvs.create false && \
    poetry install --no-dev

COPY . .
CMD ["poetry", "run", "uvicorn", "hft_trading.main:app", "--host", "0.0.0.0", "--port", "8000"]

# .github/workflows/ci.yml
name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    - name: Install dependencies
      run: |
        python -m pip install poetry
        poetry install
    - name: Run tests
      run: |
        poetry run pytest
    - name: Run linting
      run: |
        poetry run black . --check
        poetry run pylint src tests
        poetry run mypy src