# pyproject.toml
[tool.poetry]
name = "hft-trading-system"
version = "0.1.0"
description = "High-Frequency Trading System with AI/ML Integration"
authors = ["Your Name <your.email@example.com>"]
license = "MIT"

[tool.poetry.dependencies]
python = "^3.9"
numpy = "^1.23.0"
pandas = "^1.5.0"
torch = "^2.0.0"
fastapi = "^0.100.0"
redis = "^4.5.0"
sqlalchemy = "^2.0.0"
asyncpg = "^0.28.0"
websockets = "^11.0.0"
pydantic = "^2.0.0"
pydantic-settings = "^2.0.0"
prometheus-client = "^0.17.0"
python-dotenv = "^1.0.0"

[tool.poetry.dev-dependencies]
pytest = "^7.4.0"
pytest-asyncio = "^0.21.0"
pytest-cov = "^4.1.0"
black = "^23.7.0"
mypy = "^1.4.0"
pylint = "^2.17.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

# .env.example
DATABASE_URL=postgresql://user:password@localhost:5432/hft_db
REDIS_URL=redis://localhost:6379
LOG_LEVEL=INFO
ENVIRONMENT=development
MARKET_DATA_SOURCE=ibkr
RISK_CHECK_INTERVAL=1
MAX_POSITION_VALUE=1000000

# README.md
# High-Frequency Trading System

A high-performance trading system with integrated AI/ML capabilities, focusing on:
- Ultra-low latency execution
- Real-time risk management
- AI-driven trading strategies
- Market microstructure analysis

## Features
- FPGA-accelerated processing
- Advanced order routing
- Real-time risk monitoring
- Deep learning integration
- Market making capabilities

## Setup
1. Install dependencies:
```bash
poetry install
```

2. Configure environment:
```bash
cp .env.example .env
# Edit .env with your settings
```

3. Run tests:
```bash
poetry run pytest
```

4. Start development server:
```bash
poetry run uvicorn src.main:app --reload
```

## Development
- Main branch: Stable production code
- Develop branch: Integration branch
- Feature branches: New features and improvements

## Testing
```bash
# Run all tests
poetry run pytest

# Run with coverage
poetry run pytest --cov=src

# Run specific tests
poetry run pytest tests/test_market_data.py
```

## Contributing
1. Fork the repository
2. Create feature branch
3. Write tests
4. Implement feature
5. Submit pull request

## License
MIT License
